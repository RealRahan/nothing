from flask import Flask, render_template, request
import requests
import json
import datetime

app = Flask(__name__)

def fetch_tiktok_data(username):
    url = f"https://www.tiktok.com/@{username}"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36",
        "Accept-Language": "en-US,en;q=0.9"
    }
    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()

        start_tag = '<script id="__UNIVERSAL_DATA_FOR_REHYDRATION__" type="application/json">'
        end_tag = '</script>'
        start_index = response.text.find(start_tag) + len(start_tag)
        end_index = response.text.find(end_tag, start_index)
        json_data = response.text[start_index:end_index]

        data = json.loads(json_data)
        return data
    except (requests.exceptions.RequestException, json.JSONDecodeError, TypeError) as e:
        print(f"Error fetching/parsing: {e}")
        return None

country_arabic_names_with_emojis = {
    "AF": "ุฃูุบุงูุณุชุงู ๐ฆ๐ซ",
    "AL": "ุฃูุจุงููุง ๐ฆ๐ฑ",
    "DZ": "ุงูุฌุฒุงุฆุฑ ๐ฉ๐ฟ",
    "AS": "ุณุงููุง ุงูุฃูุฑูููุฉ ๐ฆ๐ธ",
    "AD": "ุฃูุฏูุฑุง ๐ฆ๐ฉ",
    "AO": "ุฃูุบููุง ๐ฆ๐ด",
    "AI": "ุฃูุบููุง ๐ฆ๐ฎ",
    "AQ": "ุฃูุชุงุฑูุชููุง ๐ฆ๐ถ",
    "AG": "ุฃูุชูุบูุง ูุจุฑุจูุฏุง ๐ฆ๐ฌ",
    "AR": "ุงูุฃุฑุฌูุชูู ๐ฆ๐ท",
    "AM": "ุฃุฑููููุง ๐ฆ๐ฒ",
    "AU": "ุฃุณุชุฑุงููุง ๐ฆ๐บ",
    "AT": "ุงูููุณุง ๐ฆ๐น",
    "AZ": "ุฃุฐุฑุจูุฌุงู ๐ฆ๐ฟ",
    "BS": "ุฌุฒุฑ ุงูุจูุงูุง ๐ง๐ธ",
    "BH": "ุงูุจุญุฑูู ๐ง๐ญ",
    "BD": "ุจูุบูุงุฏูุด ๐ง๐ฉ",
    "BB": "ุจุฑุจุงุฏูุณ ๐ง๐ง",
    "BY": "ุจููุงุฑูุณูุง ๐ง๐พ",
    "BE": "ุจูุฌููุง ๐ง๐ช",
    "BZ": "ุจููุฒ ๐ง๐ฟ",
    "BJ": "ุจููู ๐ง๐ฏ",
    "BM": "ุจุฑููุฏุง ๐ง๐ฒ",
    "BT": "ุจูุชุงู ๐ง๐น",
    "BO": "ุจูููููุง ๐ง๐ด",
    "BA": "ุงูุจูุณูุฉ ูุงููุฑุณู ๐ง๐ฆ",
    "BW": "ุจูุชุณูุงูุง ๐ง๐ผ",
    "BR": "ุงูุจุฑุงุฒูู ๐ง๐ท",
    "VG": "ุฌุฒุฑ ุงูุนุฐุฑุงุก ุงูุจุฑูุทุงููุฉ ๐ป๐ฌ",
    "IO": "ุฅูููู ุงููุญูุท ุงูููุฏู ุงูุจุฑูุทุงูู ๐ฎ๐ด",
    "BN": "ุจุฑููุงู ๐ง๐ณ",
    "BG": "ุจูุบุงุฑูุง ๐ง๐ฌ",
    "BF": "ุจูุฑูููุง ูุงุณู ๐ง๐ซ",
    "BI": "ุจูุฑููุฏู ๐ง๐ฎ",
    "CV": "ูุงุจู ููุฑุฏู ๐จ๐ป",
    "KH": "ููุจูุฏูุง ๐ฐ๐ญ",
    "CM": "ุงููุงููุฑูู ๐จ๐ฒ",
    "CA": "ููุฏุง ๐จ๐ฆ",
    "KY": "ุฌุฒุฑ ูุงููุงู ๐ฐ๐พ",
    "CF": "ุฌูููุฑูุฉ ุฃูุฑูููุง ุงููุณุทู ๐จ๐ซ",
    "TD": "ุชุดุงุฏ ๐น๐ฉ",
    "CL": "ุชุดููู ๐จ๐ฑ",
    "CN": "ุงูุตูู ๐จ๐ณ",
    "CX": "ุฌุฒูุฑุฉ ุนูุฏ ุงููููุงุฏ ๐จ๐ฝ",
    "CC": "ุฌุฒุฑ ููููุณ (ูููููุบ) ๐จ๐จ",
    "CO": "ูููููุจูุง ๐จ๐ด",
    "KM": "ุฌุฒุฑ ุงูููุฑ ๐ฐ๐ฒ",
    "CG": "ุงููููุบู ๐จ๐ฌ",
    "CD": "ุฌูููุฑูุฉ ุงููููุบู ุงูุฏูููุฑุงุทูุฉ ๐จ๐ฉ",
    "CK": "ุฌุฒุฑ ููู ๐จ๐ฐ",
    "CR": "ููุณุชุงุฑููุง ๐จ๐ท",
    "CI": "ุณุงุญู ุงูุนุงุฌ ๐จ๐ฎ",
    "HR": "ูุฑูุงุชูุง ๐ญ๐ท",
    "CU": "ููุจุง ๐จ๐บ",
    "CW": "ููุฑุงุณุงู ๐จ๐ผ",
    "CY": "ูุจุฑุต ๐จ๐พ",
    "CZ": "ุงูุชุดูู ๐จ๐ฟ",
    "DK": "ุงูุฏููุงุฑู ๐ฉ๐ฐ",
    "DJ": "ุฌูุจูุชู ๐ฉ๐ฏ",
    "DM": "ุฏููููููุง ๐ฉ๐ฒ",
    "DO": "ุฌูููุฑูุฉ ุงูุฏููููููุงู ๐ฉ๐ด",
    "EC": "ุงูุฅููุงุฏูุฑ ๐ช๐จ",
    "EG": "ูุตุฑ ๐ช๐ฌ",
    "SV": "ุงูุณููุงุฏูุฑ ๐ธ๐ป",
    "GQ": "ุบูููุง ุงูุงุณุชูุงุฆูุฉ ๐ฌ๐ถ",
    "ER": "ุฅุฑูุชุฑูุง ๐ช๐ท",
    "EE": "ุฅุณุชูููุง ๐ช๐ช",
    "SZ": "ุฅุณูุงุชููู ๐ธ๐ฟ",
    "ET": "ุฅุซููุจูุง ๐ช๐น",
    "FK": "ุฌุฒุฑ ููููุงูุฏ ๐ซ๐ฐ",
    "FO": "ุฌุฒุฑ ูุงุฑู ๐ซ๐ด",
    "FJ": "ููุฌู ๐ซ๐ฏ",
    "FI": "ููููุฏุง ๐ซ๐ฎ",
    "FR": "ูุฑูุณุง ๐ซ๐ท",
    "GF": "ุบูุงูุง ุงููุฑูุณูุฉ ๐ฌ๐ซ",
    "PF": "ุจูููููุฒูุง ุงููุฑูุณูุฉ ๐ต๐ซ",
    "GA": "ุงูุบุงุจูู ๐ฌ๐ฆ",
    "GM": "ุบุงูุจูุง ๐ฌ๐ฒ",
    "GE": "ุฌูุฑุฌูุง ๐ฌ๐ช",
    "DE": "ุฃููุงููุง ๐ฉ๐ช",
    "GH": "ุบุงูุง ๐ฌ๐ญ",
    "GI": "ุฌุจู ุทุงุฑู ๐ฌ๐ฎ",
    "GR": "ุงููููุงู ๐ฌ๐ท",
    "GL": "ุฌุฑูููุงูุฏ ๐ฌ๐ฑ",
    "GD": "ุบุฑููุงุฏุง ๐ฌ๐ฉ",
    "GP": "ุฌูุงุฏููุจ ๐ฌ๐ต",
    "GU": "ุบูุงู ๐ฌ๐บ",
    "GT": "ุบูุงุชููุงูุง ๐ฌ๐น",
    "GG": "ุบูุฑูุณู ๐ฌ๐ฌ",
    "GN": "ุบูููุง ๐ฌ๐ณ",
    "GW": "ุบูููุง ุจูุณุงู ๐ฌ๐ผ",
    "GY": "ุบูุงูุง ๐ฌ๐พ",
    "HT": "ูุงูุชู ๐ญ๐น",
    "HN": "ููุฏูุฑุงุณ ๐ญ๐ณ",
    "HK": "ูููุบ ูููุบ ๐ญ๐ฐ",
    "HU": "ููุบุงุฑูุง ๐ญ๐บ",
    "IS": "ุขูุณููุฏุง ๐ฎ๐ธ",
    "IN": "ุงูููุฏ ๐ฎ๐ณ",
    "ID": "ุฅูุฏูููุณูุง ๐ฎ๐ฉ",
    "IR": "ุฅูุฑุงู ๐ฎ๐ท",
    "IQ": "ุงูุนุฑุงู ๐ฎ๐ถ",
    "IE": "ุฃูุฑููุฏุง ๐ฎ๐ช",
    "IM": "ุฌุฒูุฑุฉ ูุงู ๐ฎ๐ฒ",
    "IL": "ุฅุณุฑุงุฆูู ๐ฎ๐ฑ",
    "IT": "ุฅูุทุงููุง ๐ฎ๐น",
    "JM": "ุฌุงูุงููุง ๐ฏ๐ฒ",
    "JP": "ุงููุงุจุงู ๐ฏ๐ต",
    "JE": "ุฌูุฑุณู ๐ฏ๐ช",
    "JO": "ุงูุฃุฑุฏู ๐ฏ๐ด",
    "KZ": "ูุงุฒุงุฎุณุชุงู ๐ฐ๐ฟ",
    "KE": "ููููุง ๐ฐ๐ช",
    "KI": "ููุฑูุจุงุชู ๐ฐ๐ฎ",
    "KP": "ููุฑูุง ุงูุดูุงููุฉ ๐ฐ๐ต",
    "KR": "ููุฑูุง ุงูุฌููุจูุฉ ๐ฐ๐ท",
    "KW": "ุงููููุช ๐ฐ๐ผ",
    "KG": "ููุฑุบูุฒุณุชุงู ๐ฐ๐ฌ",
    "LA": "ูุงูุณ ๐ฑ๐ฆ",
    "LV": "ูุงุชููุง ๐ฑ๐ป",
    "LB": "ูุจูุงู ๐ฑ๐ง",
    "LS": "ููุณูุชู ๐ฑ๐ธ",
    "LR": "ููุจูุฑูุง ๐ฑ๐ท",
    "LY": "ููุจูุง ๐ฑ๐พ",
    "LI": "ููุฎุชูุดุชุงูู ๐ฑ๐ฎ",
    "LT": "ููุชูุงููุง ๐ฑ๐น",
    "LU": "ูููุณูุจูุฑุบ ๐ฑ๐บ",
    "MO": "ูุงูุงู ๐ฒ๐ด",
    "MG": "ูุฏุบุดูุฑ ๐ฒ๐ฌ",
    "MW": "ูุงูุงูู ๐ฒ๐ผ",
    "MY": "ูุงููุฒูุง ๐ฒ๐พ",
    "MV": "ุฌุฒุฑ ุงููุงูุฏูู ๐ฒ๐ป",
    "ML": "ูุงูุทุง ๐ฒ๐ฑ",
    "MH": "ุฌุฒุฑ ูุงุฑุดุงู ๐ฒ๐ญ",
    "MQ": "ูุงุฑุชูููู ๐ฒ๐ถ",
    "MR": "ููุฑูุชุงููุง ๐ฒ๐ท",
    "MU": "ููุฑูุดููุณ ๐ฒ๐บ",
    "MX": "ุงูููุณูู ๐ฒ๐ฝ",
    "FM": "ููุงูุงุช ูููุฑูููุฒูุง ุงููุชุญุฏุฉ ๐ซ๐ฒ",
    "MD": "ูููุฏููุง ๐ฒ๐ฉ",
    "MC": "ูููุงูู ๐ฒ๐จ",
    "MN": "ููุบูููุง ๐ฒ๐ณ",
    "ME": "ุงูุฌุจู ุงูุฃุณูุฏ ๐ฒ๐ช",
    "MS": "ูููุชุณูุฑุงุช ๐ฒ๐ธ",
    "MA": "ุงููุบุฑุจ ๐ฒ๐ฆ",
    "MZ": "ููุฒูุจูู ๐ฒ๐ฟ",
    "MM": "ููุงููุงุฑ ๐ฒ๐ฒ",
    "NA": "ูุงููุจูุง ๐ณ๐ฆ",
    "NR": "ูุงูุฑู ๐ณ๐ท",
    "NP": "ููุจุงู ๐ณ๐ต",
    "NL": "ููููุฏุง ๐ณ๐ฑ",
    "NC": "ูุงููุฏูููุง ุงูุฌุฏูุฏุฉ ๐ณ๐จ",
    "NZ": "ูููุฒูููุฏุง ๐ณ๐ฟ",
    "NI": "ูููุงุฑุงุบูุง ๐ณ๐ฎ",
    "NE": "ุงูููุฌุฑ ๐ณ๐ช",
    "NG": "ููุฌูุฑูุง ๐ณ๐ฌ",
    "NU": "ูููู ๐ณ๐บ",
    "NF": "ุฌุฒูุฑุฉ ููุฑูููู ๐ณ๐ซ",
    "MP": "ุฌุฒุฑ ูุงุฑูุงูุง ุงูุดูุงููุฉ ๐ฒ๐ต",
    "NO": "ุงููุฑููุฌ ๐ณ๐ด",
    "OM": "ุนูุงู ๐ด๐ฒ",
    "PK": "ุจุงูุณุชุงู ๐ต๐ฐ",
    "PW": "ุจุงูุงู ๐ต๐ผ",
    "PS": "ููุณุทูู ๐ต๐ธ",
    "PA": "ุจููุง ๐ต๐ฆ",
    "PG": "ุจุงุจูุง ุบูููุง ุงูุฌุฏูุฏุฉ ๐ต๐ฌ",
    "PY": "ุจุงุฑุงุบูุงู ๐ต๐พ",
    "PE": "ุจูุฑู ๐ต๐ช",
    "PH": "ุงูููุจูู ๐ต๐ญ",
    "PN": "ุฌุฒุฑ ุจูุชููุฑู ๐ต๐ณ",
    "PL": "ุจูููุฏุง ๐ต๐ฑ",
    "PT": "ุงูุจุฑุชุบุงู ๐ต๐น",
    "PR": "ุจูุฑุชูุฑููู ๐ต๐ท",
    "QA": "ูุทุฑ ๐ถ๐ฆ",
    "RE": "Rรฉunion ๐ท๐ช",
    "RO": "ุฑููุงููุง ๐ท๐ด",
    "RU": "ุฑูุณูุง ๐ท๐บ",
    "RW": "ุฑูุงูุฏุง ๐ท๐ผ",
    "BL": "ุณุงูุช ุจุงุฑุชููููู ๐ง๐ฑ",
    "SH": "ุณุงูุช ูููููุง ๐ธ๐ญ",
    "KN": "ุณุงูุช ููุชุณ ูููููุณ ๐ฐ๐ณ",
    "LC": "ุณุงูุช ููุณูุง ๐ฑ๐จ",
    "MF": "ุณุงูุช ูุงุฑุชู ๐ฒ๐ซ",
    "PM": "ุณุงูุช ุจููุฑ ููููููู ๐ต๐ฒ",
    "VC": "ุณุงูุช ููุณูุช ูุฌุฒุฑ ุบุฑููุงุฏูู ๐ป๐จ",
    "WS": "ุณุงููุง ๐ผ๐ธ",
    "SM": "ุณุงู ูุงุฑููู ๐ธ๐ฒ",
    "ST": "ุณุงู ุชููู ูุจุฑููุณูุจู ๐ธ๐น",
    "SA": "ุงูููููุฉ ุงูุนุฑุจูุฉ ุงูุณุนูุฏูุฉ ๐ธ๐ฆ",
    "SN": "ุงูุณูุบุงู ๐ธ๐ณ",
    "RS": "ุตุฑุจูุง ๐ท๐ธ",
    "SC": "ุณูุดูู ๐ธ๐จ",
    "SL": "ุณูุฑุงูููู ๐ธ๐ฑ",
    "SG": "ุณูุบุงููุฑุฉ ๐ธ๐ฌ",
    "SX": "ุณููุช ูุงุฑุชู ๐ธ๐ฝ",
    "SK": "ุณูููุงููุง ๐ธ๐ฐ",
    "SI": "ุณููููููุง ๐ธ๐ฎ",
    "SB": "ุฌุฒุฑ ุณูููุงู ๐ธ๐ง",
    "SO": "ุงูุตููุงู ๐ธ๐ด",
    "ZA": "ุฌููุจ ุฃูุฑูููุง ๐ฟ๐ฆ",
    "SS": "ุฌููุจ ุงูุณูุฏุงู ๐ธ๐ธ",
    "ES": "ุฅุณุจุงููุง ๐ช๐ธ",
    "LK": "ุณุฑููุงููุง ๐ฑ๐ฐ",
    "SD": "ุงูุณูุฏุงู ๐ธ๐ฉ",
    "SR": "ุณูุฑููุงู ๐ธ๐ท",
    "SE": "ุงูุณููุฏ ๐ธ๐ช",
    "CH": "ุณููุณุฑุง ๐จ๐ญ",
    "SY": "ุณูุฑูุง ๐ธ๐พ",
    "TW": "ุชุงููุงู ๐น๐ผ",
    "TJ": "ุทุงุฌููุณุชุงู ๐น๐ฏ",
    "TZ": "ุชูุฒุงููุง ๐น๐ฟ",
    "TH": "ุชุงููุงูุฏ ๐น๐ญ",
    "TL": "ุชูููุฑ ุงูุดุฑููุฉ ๐น๐ฑ",
    "TG": "ุชูุบู ๐น๐ฌ",
    "TK": "ุชููููุงู ๐น๐ฐ",
    "TO": "ุชููุบุง ๐น๐ด",
    "TT": "ุชุฑูููุฏุงุฏ ูุชูุจุงุบู ๐น๐น",
    "TN": "ุชููุณ ๐น๐ณ",
    "TR": "ุชุฑููุง ๐น๐ท",
    "TM": "ุชุฑููุงูุณุชุงู ๐น๐ฒ",
    "TC": "ุฌุฒุฑ ุชุฑูุณ ููุงูููุณ ๐น๐จ",
    "TV": "ุชููุงูู ๐น๐ป",
    "UG": "ุฃูุบูุฏุง ๐บ๐ฌ",
    "UA": "ุฃููุฑุงููุง ๐บ๐ฆ",
    "AE": "ุงูุฅูุงุฑุงุช ุงูุนุฑุจูุฉ ุงููุชุญุฏุฉ ๐ฆ๐ช",
    "GB": "ุงูููููุฉ ุงููุชุญุฏุฉ ๐ฌ๐ง",
    "US": "ุงูููุงูุงุช ุงููุชุญุฏุฉ ๐บ๐ธ",
    "UY": "ุฃูุฑูุบูุงู ๐บ๐พ",
    "UZ": "ุฃูุฒุจูุณุชุงู ๐บ๐ฟ",
    "VU": "ูุงููุงุชู ๐ป๐บ",
    "VA": "ูุฏููุฉ ุงููุงุชููุงู ๐ป๐ฆ",
    "VE": "ููุฒูููุง ๐ป๐ช",
    "VN": "ููุชูุงู ๐ป๐ณ",
    "VI": "ุฌุฒุฑ ุงูุนุฐุฑุงุก ุงูุฃูุฑูููุฉ ๐ป๐ฎ",
    "WF": "ูุงููุณ ูููุชููุง ๐ผ๐ซ",
    "EH": "ุงูุตุญุฑุงุก ุงูุบุฑุจูุฉ ๐ช๐ญ",
    "YE": "ุงูููู ๐พ๐ช",
    "ZM": "ุฒุงูุจูุง ๐ฟ๐ฒ",
    "ZW": "ุฒููุจุงุจูู ๐ฟ๐ผ"
}

def get_country_info(country_code):
    country_name_with_emoji = country_arabic_names_with_emojis.get(country_code)
    if country_name_with_emoji:
        return {"name": country_name_with_emoji}
    else:
        return {"name": "ุบูุฑ ูุนุฑูู"}


def process_tiktok_data(data):
    try:
        user_info = data["__DEFAULT_SCOPE__"]["webapp.user-detail"]["userInfo"]
        output_text = ""

        pfp_url = user_info['user']['avatarLarger']
        pfp_filename = f"{user_info['user']['uniqueId']}_profile_pic.jpg"

        output_text += f'<div style="text-align: center;"><img src="{pfp_url}" alt="Profile Picture" style="max-width: 200px; max-height: 200px;"></div><br>'

        create_time_seconds = user_info['user']['createTime']
        create_datetime = datetime.datetime.fromtimestamp(int(create_time_seconds))
        formatted_create_date = create_datetime.strftime("%Y/%m/%d %H:%M")
        output_text += (
            f"ุงุณู ุงููุณุชุฎุฏู: {user_info['user']['uniqueId']}<br><br>"
            f"ุงูุงุณู ุงููุณุชุนุงุฑ: {user_info['user']['nickname']}<br><br>"
            f"ุงููุนุฑู: {user_info['user']['id']}<br><br>"
            f"ุชุงุฑูุฎ ุงูุฅูุดุงุก: {formatted_create_date}<br>"
            f"ุงููุชุงุจุนูู: {user_info['stats']['followerCount']}<br><br>"
            f"ูุชุงุจุน: {user_info['stats']['followingCount']}<br><br>"
            f"ุงูุฅุนุฌุงุจุงุช: {user_info['stats']['heartCount']}<br><br>"
            f"ููุงุทุน ุงูููุฏูู: {user_info['stats']['videoCount']}<br><br>"
            f"ุงูุณูุฑุฉ ุงูุฐุงุชูุฉ: {user_info['user']['signature']}<br><br>"
        )

        country_code = user_info.get('user', {}).get('region')
        country_info = get_country_info(country_code)
        output_text += f"ุงูุจูุฏ: {country_info.get('name', 'ุบูุฑ ูุนุฑูู')}<br>"

        output_text += f'<a href="{pfp_url}" download="{pfp_filename}">ุชูุฒูู ุตูุฑุฉ ุงูููู ุงูุดุฎุตู</a><br>'

        return output_text

    except (KeyError, TypeError) as e:
        return f"ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงูุจูุงูุงุช: {e}.  ูู ุงููุญุชูู ุฃู ูููู ุงุณู ุงููุณุชุฎุฏู ุฃู ุชูุณูู ุงูุจูุงูุงุช ุบูุฑ ุตุงูุญ.  ุงูุฎุทุฃ: {e}"


@app.route("/", methods=["GET", "POST"])
def index():
    output_text = ""
    username = None
    if request.method == "POST":
        username = request.form.get("username")
        if username:
            user_data = fetch_tiktok_data(username)
            if user_data:
                output_text = process_tiktok_data(user_data)
            else:
                output_text = "ูุง ูููู ุงุณุชุฑุฏุงุฏ ุงูุจูุงูุงุช. ุชุญูู ูู ุงุณู ุงููุณุชุฎุฏู ุฃู ุงูุดุจูุฉ."
        else:
            output_text = "ุงูุฑุฌุงุก ุฅุฏุฎุงู ุงุณู ูุณุชุฎุฏู."

    current_year = datetime.datetime.now().year
    return render_template("index.html", output_text=output_text, current_year=current_year, username=username)

if __name__ == "__main__":
    app.run(debug=False)